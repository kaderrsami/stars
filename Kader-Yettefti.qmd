---
title: "Kader-Yettefti Stars subject 11"
author: "Sami Kader-Yettefti"
format: html
---

```{r setup, include= FALSE}
here::i_am("stars.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
```

Link to the [GitHub repository](https://github.com/kaderrsami/stars).

### Question 3

```{r}
# Changing the loading process to handle missing values and decimal mark
planets <- vroom(
  here("data", "List%planets.csv"),
  na = "na",
  delim = ":",
  col_types = cols(
    p_name = col_character(),
    mass = col_double(),
    DENSITY = col_double(),
    `Radius (Earth)` = col_double(),
    `TERRAIN TYPE` = col_character(),
    Type_climate = col_character(),
    planet_code = col_double(),
    Star_idx = col_double()
  ),
  locale = locale(decimal_mark = ",")
)

# Check the structure of the loaded data
str(planets)
```

```{r}
# Expected values
expected_row_count <- 1191
expected_column_count <- 8

# Check the number of rows and columns
actual_row_count <- nrow(planets)
actual_column_count <- ncol(planets)

# Check if numerical variables are recognized correctly
numerical_variables <- c("mass", "Radius (Earth)", "DENSITY", "planet_code", "Star_idx")
are_numerical <- sapply(planets[numerical_variables], is.numeric)

# Conditional checks and messages
if (actual_row_count == expected_row_count && actual_column_count == expected_column_count) {
  message("Data loaded successfully w/ the correct number of rows and columns.")
} else {
  message(
    "Data loading issue: Expected rows: ", expected_row_count,
    ", Actual rows: ", actual_row_count,
    "; Expected columns: ", expected_column_count,
    ", Actual columns: ", actual_column_count
  )
}

if (all(are_numerical)) {
  message("All numerical variables are correctly recognized as numerical.")
} else {
  message("Some numerical variables are not recognized correctly.")
}
```
### Question 4

```{r}
# Number of observations (planets) and variables
num_observations <- nrow(planets)
num_variables <- ncol(planets)

# Number of missing values for each variable
missing_values <- sapply(planets, function(x) sum(is.na(x)))

# Number of observations with at least one missing value
num_obs_with_missing <- sum(apply(planets, 1, function(x) any(is.na(x))))

# Create a data frame for the table
table_data <- data.frame(
  Metric = c("Number of Observations", "Number of Variables", 
             paste("Missing Values in '", names(missing_values), "'", sep = ""),
             "Observations with at Least One Missing Value"),
  Value = c(num_observations, num_variables, missing_values, num_obs_with_missing)
)

# Create the table using kable
kable(table_data, format = "markdown", col.names = c("Metric", "Value"))
```

